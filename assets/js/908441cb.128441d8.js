"use strict";(self.webpackChunkbrobridge_org_github_io=self.webpackChunkbrobridge_org_github_io||[]).push([[5776],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(7294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=c(a),m=s,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return a?n.createElement(g,i(i({ref:t},d),{},{components:a})):n.createElement(g,i({ref:t},d))}));function g(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,i=new Array(r);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:s,i[1]=o;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9749:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=a(7462),s=(a(7294),a(3905));const r={sidebar_position:1},i="Deploy on Kubernetes",o={unversionedId:"deploy/deploy-k8s",id:"version-2.0.0/deploy/deploy-k8s",title:"Deploy on Kubernetes",description:"This document describes how to set up a demo case of Gravity on k8s. We will deploy two databases, representing Source and Target respectively. Whenever the Source is updated, it will replicate to the Target database asynchronously via Gravity.",source:"@site/versioned_docs/version-2.0.0/deploy/deploy-k8s.md",sourceDirName:"deploy",slug:"/deploy/deploy-k8s",permalink:"/docs/deploy/deploy-k8s",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-2.0.0/deploy/deploy-k8s.md",tags:[],version:"2.0.0",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Deploy ",permalink:"/docs/category/deploy-"},next:{title:"Reference",permalink:"/docs/category/reference"}},l={},c=[{value:"Components Version",id:"components-version",level:2},{value:"Get assets",id:"get-assets",level:2},{value:"Deploy Source/Tartget Database",id:"deploy-sourcetartget-database",level:2},{value:"Source",id:"source",level:3},{value:"Verify Source Database",id:"verify-source-database",level:3},{value:"Target",id:"target",level:3},{value:"Verify Target Database",id:"verify-target-database",level:3},{value:"Deploy NATS/JetStream",id:"deploy-natsjetstream",level:2},{value:"Verify JetStream",id:"verify-jetstream",level:3},{value:"Deploy Dispatcher",id:"deploy-dispatcher",level:2},{value:"Verify Dispatcher",id:"verify-dispatcher",level:3},{value:"Deploy Adapter",id:"deploy-adapter",level:2},{value:"Verify Adapter",id:"verify-adapter",level:3},{value:"Deploy Atomic",id:"deploy-atomic",level:2},{value:"Verify Atomic",id:"verify-atomic",level:3},{value:"Result",id:"result",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...a}=e;return(0,s.kt)(u,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"deploy-on-kubernetes"},"Deploy on Kubernetes"),(0,s.kt)("p",null,"This document describes how to set up a demo case of Gravity on k8s. We will deploy two databases, representing Source and Target respectively. Whenever the Source is updated, it will replicate to the Target database asynchronously via Gravity."),(0,s.kt)("h2",{id:"components-version"},"Components Version"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"MySQL: ",(0,s.kt)("inlineCode",{parentName:"li"},"mysql:8.0.33")),(0,s.kt)("li",{parentName:"ul"},"MSSQL: ",(0,s.kt)("inlineCode",{parentName:"li"},"mcr.microsoft.com/mssql/server:2019-latest")),(0,s.kt)("li",{parentName:"ul"},"Adapter: ",(0,s.kt)("inlineCode",{parentName:"li"},"brobridgehub/gravity-adapter-mssql")),(0,s.kt)("li",{parentName:"ul"},"Dispatcher (Include gravity-cli): ",(0,s.kt)("inlineCode",{parentName:"li"},"brobridgehub/gravity-dispatcher:v0.0.4")),(0,s.kt)("li",{parentName:"ul"},"Atomic: ",(0,s.kt)("inlineCode",{parentName:"li"},"brobridgehub/atomic-labdemo:v0.0.5-20230413-01")),(0,s.kt)("li",{parentName:"ul"},"JetSteam: ",(0,s.kt)("inlineCode",{parentName:"li"},"nats:2.9.15")," ")),(0,s.kt)("h2",{id:"get-assets"},"Get assets"),(0,s.kt)("p",null,"Download the configuration files and deployment files required for this objective via the following link."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/BrobridgeOrg/gravity-k8s.git\ncd gravity-k8s\n")),(0,s.kt)("h2",{id:"deploy-sourcetartget-database"},"Deploy Source/Tartget Database"),(0,s.kt)("p",null,"Next, we will deploy the Source and Target databases. For the purpose of demonstration, we will use StatefulSet to deploy the databases. Please note that deploying databases in a production environment requires consideration of various additional factors. This document does not cover the details of deploying databases in a production environment."),(0,s.kt)("h3",{id:"source"},"Source"),(0,s.kt)("p",null,"In the Source Database, we will deploy some sample schemas and enable the Change Data Capture (CDC) feature. An Init Container will fetch assets from a git repository to deploy these schemas."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/source.yaml\n\nservice/source-mssql created\nstatefulset.apps/source-mssql created\n")),(0,s.kt)("p",null,"Demo schema"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE Accounts (\n    id INT, \n    name NVARCHAR(50), \n    phone NVARCHAR(16)\n);\n")),(0,s.kt)("h3",{id:"verify-source-database"},"Verify Source Database"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl logs pod/source-mssql-0\n\nDefaulted container "source-mssql" out of: source-mssql, clear-assets (init), clone-assets (init)\nWaiting for MSSQL to be available \u23f3\n/opt/mssql/bin/sqlservr: Invalid mapping of address 0x40047f3000 in reserved address space below 0x400000000000. Possible causes:\n1) the process (itself, or via a wrapper) starts-up its own running environment sets the stack size limit to unlimited via syscall setrlimit(2);\n2) the process (itself, or via a wrapper) adjusts its own execution domain and flag the system its legacy personality via syscall personality(2);\n3) sysadmin deliberately sets the system to run on legacy VA layout mode by adjusting a sysctl knob vm.legacy_va_layout.\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get po\nNAME             READY   STATUS    RESTARTS   AGE\nsource-mssql-0   1/1     Running   0          14s\n")),(0,s.kt)("h3",{id:"target"},"Target"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/target.yaml\n\nservice/target-mysql created\nstatefulset.apps/target-mysql created\n")),(0,s.kt)("h3",{id:"verify-target-database"},"Verify Target Database"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl logs pod/target-mysql-0\n......\nWaiting for initdb finish..6\n2023-06-26T03:25:41.253109Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.\n2023-06-26T03:25:41.254020Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.33) starting as process 9\n2023-06-26T03:25:41.257026Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.\n2023-06-26T03:25:41.296837Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.\n2023-06-26T03:25:41.419987Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.\n2023-06-26T03:25:41.420007Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.\n2023-06-26T03:25:41.420746Z 0 [Warning] [MY-011810] [Server] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.\n2023-06-26T03:25:41.427362Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: '::' port: 33060, socket: /var/run/mysqld/mysqlx.sock\n2023-06-26T03:25:41.427380Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.33'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server - GPL.\nE2ETest DB is ready\n## All scripts have been executed. Waiting for MySQL(pid 9) to terminate.\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"kubectl get sts\nNAME           READY   AGE\ntarget-mysql   1/1     3m5s\n")),(0,s.kt)("h2",{id:"deploy-natsjetstream"},"Deploy NATS/JetStream"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/jetstream.yaml\n\nstatefulset.apps/nats-jetstream created\nservice/nats-jetstream created\n")),(0,s.kt)("h3",{id:"verify-jetstream"},"Verify JetStream"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get sts\nNAME             READY   AGE\nnats-jetstream   1/1     99s\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl logs pod/nats-jetstream-0\n[1] 2023/06/26 03:36:02.570121 [INF] Starting nats-server\n[1] 2023/06/26 03:36:02.570147 [INF]   Version:  2.9.15\n[1] 2023/06/26 03:36:02.570148 [INF]   Git:      [b91fa85]\n[1] 2023/06/26 03:36:02.570149 [INF]   Name:     NDZMCFMG444BODH3L75VVV6PLJOODJCDIBBNQ2RFGFNQPZ37XSKWH52H\n[1] 2023/06/26 03:36:02.570151 [INF]   Node:     dYa1wrUn\n[1] 2023/06/26 03:36:02.570152 [INF]   ID:       NDZMCFMG444BODH3L75VVV6PLJOODJCDIBBNQ2RFGFNQPZ37XSKWH52H\n[1] 2023/06/26 03:36:02.570938 [INF] Starting http monitor on 0.0.0.0:8222\n[1] 2023/06/26 03:36:02.570965 [INF] Starting JetStream\n[1] 2023/06/26 03:36:02.571050 [INF]     _ ___ _____ ___ _____ ___ ___   _   __  __\n[1] 2023/06/26 03:36:02.571058 [INF]  _ | | __|_   _/ __|_   _| _ \\ __| /_\\ |  \\/  |\n[1] 2023/06/26 03:36:02.571058 [INF] | || | _|  | | \\__ \\ | | |   / _| / _ \\| |\\/| |\n[1] 2023/06/26 03:36:02.571059 [INF]  \\__/|___| |_| |___/ |_| |_|_\\___/_/ \\_\\_|  |_|\n[1] 2023/06/26 03:36:02.571060 [INF]\n[1] 2023/06/26 03:36:02.571060 [INF]          https://docs.nats.io/jetstream\n[1] 2023/06/26 03:36:02.571061 [INF]\n[1] 2023/06/26 03:36:02.571061 [INF] ---------------- JETSTREAM ----------------\n[1] 2023/06/26 03:36:02.571063 [INF]   Max Memory:      3.85 GB\n[1] 2023/06/26 03:36:02.571064 [INF]   Max Storage:     222.32 GB\n[1] 2023/06/26 03:36:02.571065 [INF]   Store Directory: "/data/jetstream"\n[1] 2023/06/26 03:36:02.571065 [INF] -------------------------------------------\n[1] 2023/06/26 03:36:02.571278 [INF] Listening for client connections on 0.0.0.0:32803\n[1] 2023/06/26 03:36:02.571660 [INF] Server is ready\n')),(0,s.kt)("h2",{id:"deploy-dispatcher"},"Deploy Dispatcher"),(0,s.kt)("p",null,"The Dispatcher needs to be configured to handle its own event formats. We utilize the gravity-cli for this configuration. If operations are required, you can connect to perform these operations."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/dispatcher.yaml\n\npersistentvolumeclaim/dispatcher-assets-pvc created\nstatefulset.apps/gravity-dispatcher created\n")),(0,s.kt)("h3",{id:"verify-dispatcher"},"Verify Dispatcher"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl logs pod/gravity-dispatcher-0\n\nDefaulted container "gravity-dispatcher" out of: gravity-dispatcher, clear-assets (init), clone-assets (init)\nStart gravity-dispatcher\nNo configuration file was loaded\n2023-06-27 10:04:04 INFO    Debug level is set to "debug"\n\n2023-06-27 10:04:04 INFO    Connector   Connecting to Gravity Network...    {"domain": "default", "address": "nats-jetstream.default.svc.cluster.local:32803", "pingInterval": 10, "maxPingsOutstanding": 3, "maxReconnects": -1}\n2023-06-27 10:04:04 INFO    System  Loading system configuration...\n2023-06-27 10:04:04 INFO    System  Initializing secret configurations...\n2023-06-27 10:04:04 INFO    System  Initializing auth configurations...\n2023-06-27 10:04:04 INFO    System  Initializing Token RPC  {"prefix": "$GVT.default.API.CORE"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.CORE.AUTHENTICATE"}\n2023-06-27 10:04:04 INFO    System  Initializing Product RPC    {"prefix": "$GVT.default.API.PRODUCT"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.LIST"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.CREATE"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.UPDATE"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.DELETE"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.INFO"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.PURGE"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.PREPARE_SUBSCRIPTION"}\n2023-06-27 10:04:04 INFO    System  Initializing Token RPC  {"prefix": "$GVT.default.API.TOKEN"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.LIST_AVAILABLE_PERMISSIONS"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.LIST"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.CREATE"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.UPDATE"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.DELETE"}\n2023-06-27 10:04:04 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.INFO"}\n2023-06-27 10:04:04 INFO    Dispatcher  Initializing publisher with individual connection...\n2023-06-27 10:04:04 INFO    Connector   Connecting to Gravity Network...    {"domain": "default", "address": "nats-jetstream.default.svc.cluster.local:32803", "pingInterval": 10, "maxPingsOutstanding": 3, "maxReconnects": -1}\n2023-06-27 10:04:04 INFO    Dispatcher  Initializing config store...\n2023-06-27 10:04:06 INFO    System  -> $GVT.default.API.PRODUCT.CREATE\n2023-06-27 10:04:06 INFO    Dispatcher  Syncing data product settings   {"name": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Applying product settings   {"name": "accounts", "enabled": true, "ruleCount": 0}\n2023-06-27 10:04:06 INFO    Dispatcher  Create product  {"product": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Checking product stream {"product": "accounts", "stream": "GVT_default_DP_accounts"}\n2023-06-27 10:04:06 WARN    Dispatcher  Product stream is not ready {"product": "accounts", "stream": "GVT_default_DP_accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Creating a new product stream...    {"product": "accounts", "stream": "GVT_default_DP_accounts", "subject": "$GVT.default.DP.accounts.*.EVENT.>"}\nProduct "accounts" was created\nsh: 28?: bad number\n## Product has been created.\n2023-06-27 10:04:06 INFO    Dispatcher  Initializing event stream   {"stream": "GVT_default"}\n2023-06-27 10:04:06 WARN    Dispatcher  event stream not found  {"stream": "GVT_default"}\n2023-06-27 10:04:06 INFO    Dispatcher  Creating stream...  {"stream": "GVT_default", "subject": "$GVT.default.EVENT.*"}\n2023-06-27 10:04:06 INFO    Dispatcher  Deactivating product    {"product": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Activating product  {"product": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Start watching for events...\n2023-06-27 10:04:06 INFO    Dispatcher  Checking consumer   {"stream": "GVT_default", "consumer": "GVT_default_DP_accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Creating a new consumer...  {"stream": "GVT_default", "subject": "$GVT.default.EVENT.>"}\n2023-06-27 10:04:06 INFO    Dispatcher  Waiting events...   {"subject": "$GVT.default.EVENT.>", "dueable": "GVT_default_DP_accounts"}\n2023-06-27 10:04:06 INFO    System  -> $GVT.default.API.PRODUCT.INFO\n2023-06-27 10:04:06 INFO    System  -> $GVT.default.API.PRODUCT.UPDATE\n2023-06-27 10:04:06 INFO    Dispatcher  Syncing data product settings   {"name": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Applying product settings   {"name": "accounts", "enabled": true, "ruleCount": 1}\n2023-06-27 10:04:06 INFO    Dispatcher  Update product  {"product": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Deactivating product    {"product": "accounts"}\n## Product ruleset \'accountCreated\' has been created.\nsh: 28?: bad number\n2023-06-27 10:04:06 INFO    Dispatcher  Registered event    {"subject": "$GVT.default.EVENT.accountCreated"}\n2023-06-27 10:04:06 INFO    Dispatcher  Activating product  {"product": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Start watching for events...\n2023-06-27 10:04:06 INFO    Dispatcher  Checking consumer   {"stream": "GVT_default", "consumer": "GVT_default_DP_accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Consumer exists already {"stream": "GVT_default", "consumer": "GVT_default_DP_accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Waiting events...   {"subject": "$GVT.default.EVENT.>", "dueable": "GVT_default_DP_accounts"}\n2023-06-27 10:04:06 INFO    System  -> $GVT.default.API.PRODUCT.INFO\n2023-06-27 10:04:06 INFO    System  -> $GVT.default.API.PRODUCT.UPDATE\n2023-06-27 10:04:06 INFO    Dispatcher  Syncing data product settings   {"name": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Applying product settings   {"name": "accounts", "enabled": true, "ruleCount": 2}\n2023-06-27 10:04:06 INFO    Dispatcher  Update product  {"product": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Deactivating product    {"product": "accounts"}\n## Product ruleset \'accountDeleted\' has been created.\nsh: 28?: bad number\n## Product has been created. Waiting for gravity-dispatcher(pid 14) to terminate.\n2023-06-27 10:04:06 INFO    Dispatcher  Registered event    {"subject": "$GVT.default.EVENT.accountCreated"}\n2023-06-27 10:04:06 INFO    Dispatcher  Registered event    {"subject": "$GVT.default.EVENT.accountDeleted"}\n2023-06-27 10:04:06 INFO    Dispatcher  Activating product  {"product": "accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Start watching for events...\n2023-06-27 10:04:06 INFO    Dispatcher  Checking consumer   {"stream": "GVT_default", "consumer": "GVT_default_DP_accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Consumer exists already {"stream": "GVT_default", "consumer": "GVT_default_DP_accounts"}\n2023-06-27 10:04:06 INFO    Dispatcher  Waiting events...   {"subject": "$GVT.default.EVENT.>", "dueable": "GVT_default_DP_accounts"}\n')),(0,s.kt)("h2",{id:"deploy-adapter"},"Deploy Adapter"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/adapter.yaml\n\nstatefulset.apps/gravity-adapter-mssql created\npersistentvolumeclaim/mssql-adapter-data-claim created\n")),(0,s.kt)("h3",{id:"verify-adapter"},"Verify Adapter"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get pod\nNAME                      READY   STATUS    RESTARTS   AGE\ngravity-adapter-mssql-0   1/1     Running   0          15s\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl logs sts/gravity-adapter-mssql\n\nDefaulted container "gravity-adapter-mssql" out of: gravity-adapter-mssql, clear-assets (init), clone-assets (init)\nDebug level is set to "debug"\ntime="2023-06-28T02:28:40Z" level=info msg="Starting application" max_procs=8\ntime="2023-06-28T02:28:40Z" level=info msg="Connecting to gravity..." address="nats-jetstream.default.svc.cluster.local:32803" maxPingsOutstanding=3 maxReconnects=-1 pingInterval=10s\ntime="2023-06-28T02:28:40Z" level=info msg="Initializing store" path=/statestore\ntime="2023-06-28T02:28:40Z" level=info msg="Initializing source" host=source-mssql.default.svc.cluster.local name=mssql_example port=1433\ntime="2023-06-28T02:28:40Z" level=info msg="Initializing store for adapter" store=adapter-mssql_example\ntime="2023-06-28T02:28:40Z" level=info msg="Connecting to database" dbname=TestDB host=source-mssql.default.svc.cluster.local param= port=1433 username=SA\ntime="2023-06-28T02:28:55Z" level=error msg="unable to open tcp connection with host \'source-mssql.default.svc.cluster.local:1433\': dial tcp 10.100.132.253:1433: i/o timeout"\ntime="2023-06-28T02:28:55Z" level=info msg="Preparing to watch tables" tables="[dbo.Accounts]"\ntime="2023-06-28T02:28:55Z" level=info msg="Running ..."\ntime="2023-06-28T02:28:55Z" level=info msg="Received LSN" LSN= Table=dbo.Accounts\ntime="2023-06-28T02:28:55Z" level=info msg="Initializing workers ..." client_name=gravity_adapter_mssql-gravity-adapter-mssql-0-mssql_example source=mssql_example\ntime="2023-06-28T02:28:55Z" level=info msg="Start watch event."\n')),(0,s.kt)("h2",{id:"deploy-atomic"},"Deploy Atomic"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/atomic.yaml\n\nservice/atomic created\nstatefulset.apps/atomic created\n")),(0,s.kt)("h3",{id:"verify-atomic"},"Verify Atomic"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl logs pod/atomic-0\n\nDefaulted container \"atomic\" out of: atomic, clear-assets (init), clone-assets (init)\n\n> node-red@1.3.5 start\n> node packages/node_modules/node-red/red.js --userDir /assets/assets/atomic-flow /assets/assets/atomic-flow/flows.json\n\n(node:22) [DEP0128] DeprecationWarning: Invalid 'main' field in '/atomic/packages/node_modules/@node-red/editor-client/package.json' of './lib/index.js'. Please either fix that or report it to the module author\n(Use `node --trace-deprecation ...` to show where the warning was created)\n28 Jun 02:39:33 - [info]\n\nWelcome to Node-RED\n===================\n\n28 Jun 02:39:33 - [info] Node-RED version: v1.3.5\n28 Jun 02:39:33 - [info] Node.js  version: v16.18.0\n28 Jun 02:39:33 - [info] Linux 6.3.9-orbstack-00173-g5c15eb5460a9 x64 LE\n28 Jun 02:39:35 - [info] Loading palette nodes\n28 Jun 02:39:37 - [info] Settings file  : /assets/assets/atomic-flow/settings.js\n28 Jun 02:39:37 - [info] Context store  : 'default' [module=memory]\n28 Jun 02:39:37 - [info] User directory : /assets/assets/atomic-flow\n28 Jun 02:39:37 - [warn] Projects disabled : editorTheme.projects.enabled=false\n28 Jun 02:39:37 - [info] Flows file     : /assets/assets/atomic-flow/flows.json\n28 Jun 02:39:37 - [info] Creating new flow file\n28 Jun 02:39:37 - [warn]\n\n---------------------------------------------------------------------\nYour flow credentials file is encrypted using a system-generated key.\n\nIf the system-generated key is lost for any reason, your credentials\nfile will not be recoverable, you will have to delete it and re-enter\nyour credentials.\n\nYou should set your own key using the 'credentialSecret' option in\nyour settings file. Node-RED will then re-encrypt your credentials\nfile using your chosen key the next time you deploy a change.\n---------------------------------------------------------------------\n\n28 Jun 02:39:37 - [info] Server now running at http://127.0.0.1:1880/\n28 Jun 02:39:37 - [info] Starting flows\n28 Jun 02:39:37 - [info] Started flows\n")),(0,s.kt)("h2",{id:"result"},"Result"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get sts\n\nNAME                    READY   AGE\natomic                  1/1     3m40s\ngravity-adapter-mssql   1/1     14m\ngravity-dispatcher      1/1     16h\nnats-jetstream          1/1     16h\nsource-mssql            1/1     59m\ntarget-mysql            1/1     54m\n")))}p.isMDXComponent=!0}}]);