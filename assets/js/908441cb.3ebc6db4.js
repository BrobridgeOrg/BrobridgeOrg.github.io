"use strict";(self.webpackChunkbrobridge_org_github_io=self.webpackChunkbrobridge_org_github_io||[]).push([[5776],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>y});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),d=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,y=p["".concat(o,".").concat(m)]||p[m]||u[m]||s;return a?n.createElement(y,l(l({ref:t},c),{},{components:a})):n.createElement(y,l({ref:t},c))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var d=2;d<s;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9749:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const s={sidebar_position:1},l="Deploy on Kubernetes",i={unversionedId:"deploy/deploy-k8s",id:"version-2.0.0/deploy/deploy-k8s",title:"Deploy on Kubernetes",description:"This document describes how to set up a demo case of Gravity on k8s. We will deploy two databases, representing Source and Target respectively. Whenever the Source is updated, it will replicate to the Target database asynchronously via Gravity.",source:"@site/versioned_docs/version-2.0.0/deploy/deploy-k8s.md",sourceDirName:"deploy",slug:"/deploy/deploy-k8s",permalink:"/docs/deploy/deploy-k8s",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-2.0.0/deploy/deploy-k8s.md",tags:[],version:"2.0.0",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Deploy ",permalink:"/docs/category/deploy-"},next:{title:"Reference",permalink:"/docs/category/reference"}},o={},d=[{value:"Components Version",id:"components-version",level:2},{value:"Get assets",id:"get-assets",level:2},{value:"Deploy Source/Tartget Database",id:"deploy-sourcetartget-database",level:2},{value:"Source",id:"source",level:3},{value:"Verify Source Database",id:"verify-source-database",level:3},{value:"Target",id:"target",level:3},{value:"Verify Target Database",id:"verify-target-database",level:3},{value:"Deploy NATS/JetStream",id:"deploy-natsjetstream",level:2},{value:"Verify JetStream",id:"verify-jetstream",level:3},{value:"Deploy Dispatcher",id:"deploy-dispatcher",level:2},{value:"Verify Dispatcher",id:"verify-dispatcher",level:3},{value:"Deploy Adapter",id:"deploy-adapter",level:2},{value:"Verify Adapter",id:"verify-adapter",level:3},{value:"Deploy Atomic",id:"deploy-atomic",level:2},{value:"Verify Atomic",id:"verify-atomic",level:3},{value:"Result",id:"result",level:2}],c={toc:d},p="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploy-on-kubernetes"},"Deploy on Kubernetes"),(0,r.kt)("p",null,"This document describes how to set up a demo case of Gravity on k8s. We will deploy two databases, representing Source and Target respectively. Whenever the Source is updated, it will replicate to the Target database asynchronously via Gravity."),(0,r.kt)("h2",{id:"components-version"},"Components Version"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"MySQL: ",(0,r.kt)("inlineCode",{parentName:"li"},"mysql:8.0.33")),(0,r.kt)("li",{parentName:"ul"},"MSSQL: ",(0,r.kt)("inlineCode",{parentName:"li"},"mcr.microsoft.com/mssql/server:2019-latest")),(0,r.kt)("li",{parentName:"ul"},"Adapter: ",(0,r.kt)("inlineCode",{parentName:"li"},"hb.k8sbridge.com/gravity/gravity-adapter-mssql:v3.0.2")),(0,r.kt)("li",{parentName:"ul"},"Dispatcher: ",(0,r.kt)("inlineCode",{parentName:"li"},"brobridgehub/gravity-dispatcher:v0.0.2")),(0,r.kt)("li",{parentName:"ul"},"Atmoic: ",(0,r.kt)("inlineCode",{parentName:"li"},"brobridgehub/atomic-labdemo:v0.0.5-20230413-01")),(0,r.kt)("li",{parentName:"ul"},"JetSteam: ",(0,r.kt)("inlineCode",{parentName:"li"},"nats:2.9.15")," ")),(0,r.kt)("h2",{id:"get-assets"},"Get assets"),(0,r.kt)("p",null,"Download the configuration files and deployment files required for this objective via the following link."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/BrobridgeOrg/gravity-k8s.git\ncd gravity-k8s\n")),(0,r.kt)("h2",{id:"deploy-sourcetartget-database"},"Deploy Source/Tartget Database"),(0,r.kt)("p",null,"Next, we will deploy the Source and Target databases. For the purpose of demonstration, we will use StatefulSet to deploy the databases. Please note that deploying databases in a production environment requires consideration of various additional factors. This document does not cover the details of deploying databases in a production environment."),(0,r.kt)("h3",{id:"source"},"Source"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/source.yaml\n\npersistentvolumeclaim/mssql-data-claim created\nservice/source-mssql created\nstatefulset.apps/source-mssql created\n")),(0,r.kt)("h3",{id:"verify-source-database"},"Verify Source Database"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl logs pod/source-mssql-0\n \nDefaulted container "source-mssql" out of: source-mssql, clone-assets (init)\nWaiting for MSSQL to be available \u23f3\n/opt/mssql/bin/sqlservr: Invalid mapping of address 0x40047f3000 in reserved address space below 0x400000000000. Possible causes:\n1) the process (itself, or via a wrapper) starts-up its own running environment sets the stack size limit to unlimited via syscall setrlimit(2);\n2) the process (itself, or via a wrapper) adjusts its own execution domain and flag the system its legacy personality via syscall personality(2);\n3) sysadmin deliberately sets the system to run on legacy VA layout mode by adjusting a sysctl knob vm.legacy_va_layout.\n\nMon Jun 26 03:29:34 UTC 2023\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get po\nNAME             READY   STATUS    RESTARTS   AGE\nsource-mssql-0   1/1     Running   0          14s\n")),(0,r.kt)("h3",{id:"target"},"Target"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/target.yaml\n\nservice/target-mysql created\npersistentvolumeclaim/mysql-data-claim created\nstatefulset.apps/target-mysql created\n")),(0,r.kt)("h3",{id:"verify-target-database"},"Verify Target Database"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl logs pod/target-mysql-0\n......\nWaiting for initdb finish..6\n2023-06-26T03:25:41.253109Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.\n2023-06-26T03:25:41.254020Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.33) starting as process 9\n2023-06-26T03:25:41.257026Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.\n2023-06-26T03:25:41.296837Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.\n2023-06-26T03:25:41.419987Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.\n2023-06-26T03:25:41.420007Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.\n2023-06-26T03:25:41.420746Z 0 [Warning] [MY-011810] [Server] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.\n2023-06-26T03:25:41.427362Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: '::' port: 33060, socket: /var/run/mysqld/mysqlx.sock\n2023-06-26T03:25:41.427380Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.33'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server - GPL.\nE2ETest DB is ready\n## All scripts have been executed. Waiting for MySQL(pid 9) to terminate.\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl get sts\nNAME           READY   AGE\ntarget-mysql   1/1     3m5s\n")),(0,r.kt)("h2",{id:"deploy-natsjetstream"},"Deploy NATS/JetStream"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/jetstream.yaml\n\nstatefulset.apps/nats-jetstream created\nservice/nats-jetstream created\n")),(0,r.kt)("h3",{id:"verify-jetstream"},"Verify JetStream"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get sts\nNAME             READY   AGE\nnats-jetstream   1/1     99s\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl logs pod/nats-jetstream-0\n[1] 2023/06/26 03:36:02.570121 [INF] Starting nats-server\n[1] 2023/06/26 03:36:02.570147 [INF]   Version:  2.9.15\n[1] 2023/06/26 03:36:02.570148 [INF]   Git:      [b91fa85]\n[1] 2023/06/26 03:36:02.570149 [INF]   Name:     NDZMCFMG444BODH3L75VVV6PLJOODJCDIBBNQ2RFGFNQPZ37XSKWH52H\n[1] 2023/06/26 03:36:02.570151 [INF]   Node:     dYa1wrUn\n[1] 2023/06/26 03:36:02.570152 [INF]   ID:       NDZMCFMG444BODH3L75VVV6PLJOODJCDIBBNQ2RFGFNQPZ37XSKWH52H\n[1] 2023/06/26 03:36:02.570938 [INF] Starting http monitor on 0.0.0.0:8222\n[1] 2023/06/26 03:36:02.570965 [INF] Starting JetStream\n[1] 2023/06/26 03:36:02.571050 [INF]     _ ___ _____ ___ _____ ___ ___   _   __  __\n[1] 2023/06/26 03:36:02.571058 [INF]  _ | | __|_   _/ __|_   _| _ \\ __| /_\\ |  \\/  |\n[1] 2023/06/26 03:36:02.571058 [INF] | || | _|  | | \\__ \\ | | |   / _| / _ \\| |\\/| |\n[1] 2023/06/26 03:36:02.571059 [INF]  \\__/|___| |_| |___/ |_| |_|_\\___/_/ \\_\\_|  |_|\n[1] 2023/06/26 03:36:02.571060 [INF]\n[1] 2023/06/26 03:36:02.571060 [INF]          https://docs.nats.io/jetstream\n[1] 2023/06/26 03:36:02.571061 [INF]\n[1] 2023/06/26 03:36:02.571061 [INF] ---------------- JETSTREAM ----------------\n[1] 2023/06/26 03:36:02.571063 [INF]   Max Memory:      3.85 GB\n[1] 2023/06/26 03:36:02.571064 [INF]   Max Storage:     222.32 GB\n[1] 2023/06/26 03:36:02.571065 [INF]   Store Directory: "/data/jetstream"\n[1] 2023/06/26 03:36:02.571065 [INF] -------------------------------------------\n[1] 2023/06/26 03:36:02.571278 [INF] Listening for client connections on 0.0.0.0:32803\n[1] 2023/06/26 03:36:02.571660 [INF] Server is ready\n')),(0,r.kt)("h2",{id:"deploy-dispatcher"},"Deploy Dispatcher"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/dispatcher.yaml\n\npersistentvolumeclaim/dispatcher-assets-pvc created\nstatefulset.apps/gravity-dispatcher created\n")),(0,r.kt)("h3",{id:"verify-dispatcher"},"Verify Dispatcher"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'kubectl logs pod/gravity-dispatcher-0\n\nDefaulted container "gravity-dispatcher" out of: gravity-dispatcher, clone-assets (init)\nStart gravity-dispatcher\nNo configuration file was loaded\n2023-06-26 04:25:28 INFO    Debug level is set to "debug"\n\n2023-06-26 04:25:28 INFO    Connector   Connecting to Gravity Network...    {"domain": "default", "address": "nats-jetstream.default.svc.cluster.local:32803", "pingInterval": 10, "maxPingsOutstanding": 3, "maxReconnects": -1}\n2023-06-26 04:25:28 INFO    System  Loading system configuration...\n2023-06-26 04:25:28 INFO    System  Initializing Token RPC  {"prefix": "$GVT.default.API.CORE"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.CORE.AUTHENTICATE"}\n2023-06-26 04:25:28 INFO    System  Initializing Product RPC    {"prefix": "$GVT.default.API.PRODUCT"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.LIST"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.CREATE"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.UPDATE"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.DELETE"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.INFO"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.PURGE"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.PRODUCT.PREPARE_SUBSCRIPTION"}\n2023-06-26 04:25:28 INFO    System  Initializing Token RPC  {"prefix": "$GVT.default.API.TOKEN"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.LIST_AVAILABLE_PERMISSIONS"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.LIST"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.CREATE"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.UPDATE"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.DELETE"}\n2023-06-26 04:25:28 INFO    System  Registered API  {"path": "$GVT.default.API.TOKEN.INFO"}\n')),(0,r.kt)("h2",{id:"deploy-adapter"},"Deploy Adapter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/adapter.yaml\n\nstatefulset.apps/gravity-adapter-mssql created\npersistentvolumeclaim/mssql-adapter-data-claim created\n")),(0,r.kt)("h3",{id:"verify-adapter"},"Verify Adapter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get pod\nNAME                      READY   STATUS    RESTARTS   AGE\ngravity-adapter-mssql-0   1/1     Running   0          15s\n")),(0,r.kt)("h2",{id:"deploy-atomic"},"Deploy Atomic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f k8s/atomic.yaml\n\nservice/atomic created\npersistentvolumeclaim/assets-claim created\npersistentvolumeclaim/e2e-status-claim created\nstatefulset.apps/atomic created\n")),(0,r.kt)("h3",{id:"verify-atomic"},"Verify Atomic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl logs pod/atomic-0\n\nWelcome to Node-RED\n===================\n\n26 Jun 04:58:09 - [info] Node-RED version: v1.3.5\n26 Jun 04:58:09 - [info] Node.js  version: v16.18.0\n26 Jun 04:58:09 - [info] Linux 6.3.9-orbstack-00173-g5c15eb5460a9 x64 LE\n26 Jun 04:58:12 - [info] Loading palette nodes\n26 Jun 04:58:15 - [info] Settings file  : /assets/assets/atomic-flow/settings.js\n26 Jun 04:58:15 - [info] Context store  : 'default' [module=memory]\n26 Jun 04:58:15 - [info] User directory : /assets/assets/atomic-flow\n26 Jun 04:58:15 - [warn] Projects disabled : editorTheme.projects.enabled=false\n26 Jun 04:58:15 - [info] Flows file     : /assets/assets/atomic-flow/flows.json\n26 Jun 04:58:15 - [info] Creating new flow file\n26 Jun 04:58:15 - [warn]\n\n---------------------------------------------------------------------\nYour flow credentials file is encrypted using a system-generated key.\n\nIf the system-generated key is lost for any reason, your credentials\nfile will not be recoverable, you will have to delete it and re-enter\nyour credentials.\n\nYou should set your own key using the 'credentialSecret' option in\nyour settings file. Node-RED will then re-encrypt your credentials\nfile using your chosen key the next time you deploy a change.\n---------------------------------------------------------------------\n\n26 Jun 04:58:15 - [info] Server now running at http://127.0.0.1:1880/\n26 Jun 04:58:15 - [info] Starting flows\n26 Jun 04:58:15 - [info] Started flows\n")),(0,r.kt)("h2",{id:"result"},"Result"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl get sts\n\nNAME                    READY   AGE\natomic                  1/1     80s\ngravity-adapter-mssql   1/1     66m\ngravity-dispatcher      1/1     33m\nnats-jetstream          1/1     83m\nsource-mssql            1/1     90m\ntarget-mysql            1/1     93m\n")))}u.isMDXComponent=!0}}]);